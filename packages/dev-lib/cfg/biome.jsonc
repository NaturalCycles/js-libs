{
  "$schema": "https://biomejs.dev/schemas/2.2.2/schema.json",
  "root": false,
  "files": {
    "includes": [
      "*",
      "src/**",
      "scripts/**",
      "!**/*.html",
      "!**/*.css",
      "!**/*.scss",
      "!**/tsconfig.json",
      "!**/tsconfig.*.json",
      "!**/__exclude",
      "!**/try.ts",
      "!**/*.compact.json",
      "!**/*.mock.json"
    ]
  },
  "formatter": {
    "enabled": true,
    "formatWithErrors": false,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineEnding": "lf",
    "lineWidth": 100,
    "attributePosition": "auto"
  },
  "assist": { "actions": { "source": { "organizeImports": "off" } } },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "performance": {
        // "useTopLevelRegex": "error" // consider
        "noDelete": "off" // oxlint
      },
      "correctness": {
        "useImportExtensions": "off", // oxlint
        "useParseIntRadix": "off",
        "noUnusedFunctionParameters": "off", // oxlint
        "noConstantCondition": "off", // ox
        // noUnusedImports + noUnusedVariables can replace eslint-plugin-unused-vars!
        "noUnusedImports": "off", // oxlint
        "noUnusedVariables": {
          "fix": "none",
          "level": "off", // oxlint
          "options": {}
        }
      },
      "style": {
        // "useDefaultSwitchClause": "error", // consider`
        "useThrowNewError": "error",
        "useThrowOnlyError": "error",
        "useConsistentBuiltinInstantiation": "off", // disallows Array()
        "noDoneCallback": "error",
        "useShorthandFunctionType": "error",
        "useShorthandAssign": "error",
        "useForOf": "off", // oxlint
        "useConsistentArrayType": "error",
        "noDefaultExport": "off", // oxlint
        "noNonNullAssertion": "off",
        "useImportType": "error",
        "noParameterAssign": "off",
        "useTemplate": "off",
        "useNumberNamespace": "off",
        "noUnusedTemplateLiteral": "off",
        "useAsConstAssertion": "error",
        "useDefaultParameterLast": "error",
        "useEnumInitializers": "error",
        "useSelfClosingElements": "error",
        "useSingleVarDeclarator": "error",
        "noInferrableTypes": "error",
        "noUselessElse": "error",
        "useArrayLiterals": "error"
        // "noCommonJs": "error" // oxlint
      },
      "suspicious": {
        "useNumberToFixedDigitsArgument": "error",
        "useIterableCallbackReturn": "off",
        "useErrorMessage": "off", // ox
        "noControlCharactersInRegex": "off", // ox
        "noEvolvingTypes": "error",
        "noExplicitAny": "off",
        "noAssignInExpressions": "off",
        "noPrototypeBuiltins": "off",
        "noGlobalIsNan": "off", // todo,
        "noThenProperty": "off",
        "noImportAssign": "off",
        "noDoubleEquals": "off", // oxlint
        "noDocumentCookie": "off", // ox
        "noEmptyInterface": "off"
      },
      "complexity": {
        "useDateNow": "error",
        "useArrowFunction": "off", // ox
        "noUselessUndefinedInitialization": "error",
        "noUselessEscapeInRegex": "off", // ox
        "noUselessStringConcat": "error",
        "noForEach": "off",
        "noUselessThisAlias": "off",
        "useLiteralKeys": "off",
        "noBannedTypes": "off",
        "noCommaOperator": "error",
        "noArguments": "error"
      },
      "nursery": {}
    }
  },
  "javascript": {
    "formatter": {
      "jsxQuoteStyle": "double",
      "quoteProperties": "asNeeded",
      "trailingCommas": "all",
      "semicolons": "asNeeded",
      "arrowParentheses": "asNeeded",
      "bracketSpacing": true,
      "bracketSameLine": false,
      "quoteStyle": "single",
      "attributePosition": "auto"
    }
  },
  "overrides": [
    {
      "includes": ["**/*.vue"],
      "linter": {
        "rules": {
          "correctness": {
            // doesn't work well with *.vue files
            "noUnusedImports": "off",
            "noUnusedVariables": "off"
          }
        }
      }
    }
  ]
}
